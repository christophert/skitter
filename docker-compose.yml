version: '3'
services:
    haproxy:
        build: loadbal
        ports:
            - 1936:1936
            - 80:80
            - 443:443
        depends_on:
            - cachea
            - cacheb
    cachea:
        build: cache
        environment:
            SSL_HOSTNAME: cachea
        links:
            - "proxya:web"
        depends_on:
            - ca
            - proxya
    cacheb:
        build: cache
        environment:
            SSL_HOSTNAME: cacheb
        links:
            - "proxyb:web"
        depends_on:
            - ca
            - proxyb
    proxya:
        build: proxy
        environment:
            SSL_HOSTNAME: proxya
        depends_on:
            - pweb
            - authentication
    proxyb:
        build: proxy
        environment:
            SSL_HOSTNAME: proxyb 
        depends_on:
            - pweb
            - authentication
    pweb:
        build: web
    # Activity 7
    skitdb:
        build: elasticsearch
        environment:
            ELASTIC_PASSWORD: $ELASTIC_PASSWORD
            CERTS_DIR: $CERTS_DIR
            xpack.security.http.ssl.enabled: "true"
            xpack.security.transport.ssl.enabled: "true"
            xpack.security.transport.ssl.verification_mode: none
            xpack.ssl.certificate_authorities: $CERTS_DIR/ca.crt
            xpack.ssl.certificate: $CERTS_DIR/certificate.crt
            xpack.ssl.key: $CERTS_DIR/certificate.key
        ports:
            - 9200:9200
            - 9300:9300
        depends_on:
            - ca
        command: dockerize -wait http://ca:8888
    skitcreate:
        build: skit-create
        ports:
            - 81:81
        depends_on: 
            - skitdb
            - ca
        command: dockerize -wait http://ca:8888
    # Activity 4
    db:
        build: mysql
        restart: always
        environment:
            MYSQL_DATABASE: skitter
            MYSQL_USER: skitter_overlord
            MYSQL_PASSWORD: a_GENerIC_p@ssW0rd
            MYSQL_ROOT_PASSWORD: "included because docker said so"
    authentication:
        build: auth
        ports:
            - 8080:8080
        depends_on:
            - db
            - ca
        command: dockerize -wait http://db:3306 -wait http://ca:8888 
    ca:
        build: app_ca
    sut:
        build: testdata
    ruby:
        build: rubyonrails
        ports:
            - 3000:3000
